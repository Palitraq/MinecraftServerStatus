import logging
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes, MessageHandler, filters
from config import TELEGRAM_BOT_TOKEN, MINECRAFT_SERVER_IP, MINECRAFT_SERVER_PORT

# Enable logging
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)


# –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
def get_keyboard():
    keyboard = [
        ['–û –±–æ—Ç–µ', '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–Ω–ª–∞–π–Ω', 'ü§òHeavy Metalü§ò']
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –Ø - –º–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ by gladiatorbleid.\n\n'
        '–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–Ω–ª–∞–π–Ω" —á—Ç–æ–± –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–∫—É—â–∏–π –æ–Ω–ª–∞–π–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ',
        parse_mode='Markdown',
        reply_markup=get_keyboard()
    )


async def check_server(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        from mcstatus import JavaServer
        server = JavaServer(MINECRAFT_SERVER_IP, MINECRAFT_SERVER_PORT)

        # Get status
        status = server.status()
        players_online = status.players.online
        max_players = status.players.max

        # Create message
        msg = f"–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞: üü¢ –û–Ω–ª–∞–π–Ω\n"
        msg += f"–ò–≥—Ä–æ–∫–æ–≤ –æ–Ω–ª–∞–π–Ω: {players_online}/{max_players}"

        if players_online > 0 and hasattr(status.players, 'sample') and status.players.sample:
            msg += "\n\n–ù–∏–∫–∏ –∏–≥—Ä–æ–∫–æ–≤:"
            for player in status.players.sample:
                msg += f"\n‚Ä¢ {player.name}"

        await update.message.reply_text(msg, reply_markup=get_keyboard())

    except Exception as e:

        await update.message.reply_text("–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞: üî¥ –û—Ñ—Ñ–ª–∞–π–Ω\n–°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ –≤—ã–∫–ª—é—á–µ–Ω",
                                        reply_markup=get_keyboard())


async def heavymetal2(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ù–ê –í–°–ï–• –≠–ö–†–ê–ù–ê–•", reply_markup=get_keyboard())


async def message_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –∫–Ω–æ–ø–æ–∫ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    if update.message.text:
        text = update.message.text
        if text == '–û –±–æ—Ç–µ':
            await start(update, context)
        elif text == '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–Ω–ª–∞–π–Ω':
            await check_server(update, context)
        elif text == 'ü§òHeavy Metalü§ò':
            await heavymetal2(update, context)


if __name__ == '__main__':
    application = ApplicationBuilder().token(TELEGRAM_BOT_TOKEN).build()

    application.add_handler(CommandHandler('start', start))
    application.add_handler(CommandHandler('check', check_server))
    application.add_handler(CommandHandler('heavymetal2', heavymetal2))

    application.add_handler(MessageHandler(filters.ALL, message_handler))

    application.run_polling()
